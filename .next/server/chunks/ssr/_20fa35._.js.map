{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 5, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/app/layout.tsx"],"sourcesContent":["import \"./globals.css\";\n\nexport default function RootLayout({\n  children,\n}: {\n  children: React.ReactNode;\n}) {\n  return (\n    <html lang=\"en\">\n      <body>{children}</body>\n    </html>\n  );\n}\n"],"names":[],"mappings":";;;;;;;AAEe,SAAS,WAAW,EACjC,QAAQ,EAGT;IACC,qBACE,wPAAC;QAAK,MAAK;kBACT,cAAA,wPAAC;sBAAM;;;;;;;;;;;AAGb"}},
    {"offset": {"line": 28, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 40, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/components/ui/accordion.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const Accordion = registerClientReference(\n    function() { throw new Error(\"Attempted to call Accordion() from the server but Accordion is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/components/ui/accordion.tsx\",\n    \"Accordion\",\n);\nexport const AccordionContent = registerClientReference(\n    function() { throw new Error(\"Attempted to call AccordionContent() from the server but AccordionContent is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/components/ui/accordion.tsx\",\n    \"AccordionContent\",\n);\nexport const AccordionItem = registerClientReference(\n    function() { throw new Error(\"Attempted to call AccordionItem() from the server but AccordionItem is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/components/ui/accordion.tsx\",\n    \"AccordionItem\",\n);\nexport const AccordionTrigger = registerClientReference(\n    function() { throw new Error(\"Attempted to call AccordionTrigger() from the server but AccordionTrigger is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/components/ui/accordion.tsx\",\n    \"AccordionTrigger\",\n);\n"],"names":[],"mappings":";;;;;;;;;AACO,MAAM,YAAY,CAAA,GAAA,+PAAA,CAAA,0BAAuB,AAAD,EAC3C;IAAa,MAAM,IAAI,MAAM;AAAkO,GAC/P,yCACA;AAEG,MAAM,mBAAmB,CAAA,GAAA,+PAAA,CAAA,0BAAuB,AAAD,EAClD;IAAa,MAAM,IAAI,MAAM;AAAgP,GAC7Q,yCACA;AAEG,MAAM,gBAAgB,CAAA,GAAA,+PAAA,CAAA,0BAAuB,AAAD,EAC/C;IAAa,MAAM,IAAI,MAAM;AAA0O,GACvQ,yCACA;AAEG,MAAM,mBAAmB,CAAA,GAAA,+PAAA,CAAA,0BAAuB,AAAD,EAClD;IAAa,MAAM,IAAI,MAAM;AAAgP,GAC7Q,yCACA"}},
    {"offset": {"line": 61, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 66, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":""}},
    {"offset": {"line": 71, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 76, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/db/index.ts"],"sourcesContent":["import { PrismaClient } from \"@prisma/client\";\n\nexport const db = new PrismaClient();\n"],"names":[],"mappings":";;;;;;AAEO,MAAM,KAAK,IAAI,uDAAA,CAAA,eAAY"}},
    {"offset": {"line": 83, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 88, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/app/page.tsx"],"sourcesContent":["import {\n  Accordion,\n  AccordionContent,\n  AccordionItem,\n  AccordionTrigger,\n} from \"@/components/ui/accordion\";\nimport { db } from \"@/db\";\n\nexport default async function Page() {\n  const expenseItems = await db.expenseItem.findMany();\n\n  return (\n    <div className=\"max-w-2xl mx-auto p-6 space-y-8\">\n      {/* Exercise 3 Header */}\n      <section>\n        <h2 className=\"text-2xl font-semibold mb-4\">Exercise 3: Accordion</h2>\n        <Accordion type=\"single\" collapsible className=\"w-full\">\n          <AccordionItem value=\"item-1\">\n            <AccordionTrigger>Who is Heicoders?</AccordionTrigger>\n            <AccordionContent>\n              A highly-rated, outcome-driven tech education provider that seeks\n              to accelerate your career through high-quality classes.\n            </AccordionContent>\n          </AccordionItem>\n          <AccordionItem value=\"item-2\">\n            <AccordionTrigger>What is SE200?</AccordionTrigger>\n            <AccordionContent>\n              A full-stack software engineering focusing on databases,\n              engineering principles and web application frameworks.\n            </AccordionContent>\n          </AccordionItem>\n          <AccordionItem value=\"item-3\">\n            <AccordionTrigger>\n              What OS can I use for web development?\n            </AccordionTrigger>\n            <AccordionContent>\n              Both Windows and Mac operating systems are suitable options.\n            </AccordionContent>\n          </AccordionItem>\n          <AccordionItem value=\"item-4\">\n            <AccordionTrigger>What is a nanodegree?</AccordionTrigger>\n            <AccordionContent>\n              Comprises 3 or more individual courses that progressively equip\n              learners with the skill sets required for working in the tech\n              sector.\n            </AccordionContent>\n          </AccordionItem>\n        </Accordion>\n      </section>\n\n      {/* Expense Items Header */}\n      <section>\n        <h2 className=\"text-2xl font-semibold mb-4\">\n          Lesson 7: Reading data from ExpenseItem in postgres\n        </h2>\n        <div className=\"space-y-3\">\n          {expenseItems.map((expenseItem) => (\n            <div\n              key={expenseItem.id}\n              className=\"p-4 rounded-md border shadow-sm bg-white\"\n            >\n              {expenseItem.item}\n            </div>\n          ))}\n        </div>\n      </section>\n    </div>\n  );\n}\n"],"names":[],"mappings":";;;;;;;;;;AAQe,eAAe;IAC5B,MAAM,eAAe,MAAM,2GAAA,CAAA,KAAE,CAAC,WAAW,CAAC,QAAQ;IAElD,qBACE,wPAAC;QAAI,WAAU;;0BAEb,wPAAC;;kCACC,wPAAC;wBAAG,WAAU;kCAA8B;;;;;;kCAC5C,wPAAC,8HAAA,CAAA,YAAS;wBAAC,MAAK;wBAAS,WAAW;wBAAC,WAAU;;0CAC7C,wPAAC,8HAAA,CAAA,gBAAa;gCAAC,OAAM;;kDACnB,wPAAC,8HAAA,CAAA,mBAAgB;kDAAC;;;;;;kDAClB,wPAAC,8HAAA,CAAA,mBAAgB;kDAAC;;;;;;;;;;;;0CAKpB,wPAAC,8HAAA,CAAA,gBAAa;gCAAC,OAAM;;kDACnB,wPAAC,8HAAA,CAAA,mBAAgB;kDAAC;;;;;;kDAClB,wPAAC,8HAAA,CAAA,mBAAgB;kDAAC;;;;;;;;;;;;0CAKpB,wPAAC,8HAAA,CAAA,gBAAa;gCAAC,OAAM;;kDACnB,wPAAC,8HAAA,CAAA,mBAAgB;kDAAC;;;;;;kDAGlB,wPAAC,8HAAA,CAAA,mBAAgB;kDAAC;;;;;;;;;;;;0CAIpB,wPAAC,8HAAA,CAAA,gBAAa;gCAAC,OAAM;;kDACnB,wPAAC,8HAAA,CAAA,mBAAgB;kDAAC;;;;;;kDAClB,wPAAC,8HAAA,CAAA,mBAAgB;kDAAC;;;;;;;;;;;;;;;;;;;;;;;;0BAUxB,wPAAC;;kCACC,wPAAC;wBAAG,WAAU;kCAA8B;;;;;;kCAG5C,wPAAC;wBAAI,WAAU;kCACZ,aAAa,GAAG,CAAC,CAAC,4BACjB,wPAAC;gCAEC,WAAU;0CAET,YAAY,IAAI;+BAHZ,YAAY,EAAE;;;;;;;;;;;;;;;;;;;;;;AAUjC"}},
    {"offset": {"line": 260, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 271, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/.next-internal/server/app/page/actions.js"],"sourcesContent":["__turbopack_export_value__({\n});"],"names":[],"mappings":"AAAA,2BAA2B,CAC3B"}},
    {"offset": {"line": 272, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}